{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponents.js","components/ContactComponent.js","components/DishDetailComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","witdh","top","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","setState","rating","outline","isOpen","toggle","DishDetail","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","About","RenderLeaders","leaders","list","RenderLeader","tag","left","middle","object","body","heading","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","actions","reset","feedback","newFeedback","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4QAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yBCMvB,SAASC,EAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAiB,EAAXC,QAC5B,OAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAE,gBAAWF,EAAKG,KACpB,kBAAC,IAAD,CAASC,MAAM,OAAOC,IAAKP,EAAUE,EAAKM,MAAOC,IAAKP,EAAKQ,OAC3D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYR,EAAKQ,UAOrC,IAgDeC,EAhDF,SAACC,GAEV,IAAMC,EAAOD,EAAME,OAAOA,OAAOC,KAAI,SAACb,GAClC,OAEI,yBAAKH,UAAU,sBAAsBiB,IAAKd,EAAKG,IAC3C,kBAACJ,EAAD,CAAgBC,KAAMA,QAKlC,OAAIU,EAAME,OAAOG,UAET,yBAAKlB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAILa,EAAME,OAAOI,QAEhB,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKa,EAAME,OAAOI,WAM1B,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAMK,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBe,QAAM,GAAtB,UAGR,yBAAKpB,UAAU,UACX,oCACA,8BAEJ,yBAAKA,UAAU,OACVc,K,eCvDfO,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IA2L9DU,E,kDAvLX,WAAYnB,GAAO,IAAD,8BACd,cAAMA,IAEDoB,aAAe,EAAKA,aAAaC,KAAlB,gBAHN,E,yDAMLC,GACTC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAElDK,KAAK3B,MAAM4B,aAAaN,GACxBK,KAAK3B,MAAM6B,sB,+BAIN,IAAD,OACJ,OACI,yBAAK1C,UAAU,aACX,yBAAKA,UAAU,OACP,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAMK,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBe,QAAM,GAAtB,gBAGJ,yBAAKpB,UAAU,UACX,0CACA,8BAER,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAG2C,KAAK,6BAAR,wBAG5C,yBAAK3C,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY4C,KAAK,SAC5B,uBAAGA,KAAK,SAAS5C,UAAU,kBAAkB2C,KAAK,oBAAmB,uBAAG3C,UAAU,gBAAlF,SACA,uBAAG4C,KAAK,SAAS5C,UAAU,eAAe2C,KAAK,+CAA8C,uBAAG3C,UAAU,gBAA1G,UACA,uBAAG4C,KAAK,SAAS5C,UAAU,kBAAkB2C,KAAK,6BAA4B,uBAAG3C,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBACf,kBAAC,OAAD,CAAM6C,MAAM,WAAWC,SAAU,SAACX,GAAD,OAAY,EAAKF,aAAaE,KACvD,kBAAC,IAAD,CAAKnC,UAAU,cACX,kBAAC,IAAD,CAAO+C,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,aAAavC,GAAG,YAAYK,KAAK,YACjDuC,YAAY,aACZlD,UAAU,eACVmD,WAAY,CACR9B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAE5D,kBAAC,SAAD,CACAxB,UAAU,cACV6C,MAAM,aACNO,KAAK,UACLC,SAAU,CACNhC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3B,kBAAC,IAAD,CAAKxB,UAAU,cACX,kBAAC,IAAD,CAAO+C,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,YAAYvC,GAAG,WAAWK,KAAK,WAC/CuC,YAAY,YACZlD,UAAU,eACVmD,WAAY,CACR9B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,OAE5D,kBAAC,SAAD,CACAxB,UAAU,cACV6C,MAAM,YACNO,KAAK,UACLC,SAAU,CACNhC,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAI3B,kBAAC,IAAD,CAAKxB,UAAU,cACX,kBAAC,IAAD,CAAO+C,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAUvC,GAAG,SAASK,KAAK,SAC3CuC,YAAY,cACZlD,UAAU,eACVmD,WAAY,CACR9B,WAAUK,UAAWA,EAAU,GAAIF,UAAWA,EAAU,IAAKG,cAGrE,kBAAC,SAAD,CACI3B,UAAU,cACV6C,MAAM,UACNO,KAAK,UACLC,SAAU,CACNhC,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B,kBAAC,IAAD,CAAK3B,UAAU,cACX,kBAAC,IAAD,CAAO+C,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,SAASvC,GAAG,QAAQK,KAAK,QACzCuC,YAAY,QACZlD,UAAU,eACVmD,WAAY,CACR9B,WAAUS,gBAEd,kBAAC,SAAD,CACA9B,UAAU,cACV6C,MAAM,SACNO,KAAK,UACLC,SAAU,CACNhC,SAAU,WACVS,WAAY,6BAK5B,kBAAC,IAAD,CAAK9B,UAAU,cACX,kBAAC,IAAD,CAAKgD,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACvB,yBAAKvD,UAAU,cACX,kBAAC,IAAD,CAAOwD,OAAK,GACR,kBAAC,UAAQC,SAAT,CAAkBZ,MAAM,SAASlC,KAAK,QAClCX,UAAU,qBAFlB,IAEwC,IAChC,0DAIhB,kBAAC,IAAD,CAAKgD,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQG,OAAT,CAAgBb,MAAM,eAAelC,KAAK,cACtCX,UAAU,gBACV,wCACA,4CAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAO+C,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,WAAWvC,GAAG,UAAUK,KAAK,UACjDiD,KAAK,KACL5D,UAAU,mBAGtB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAKgD,GAAI,CAACM,KAAK,GAAIC,OAAQ,IACvB,kBAAC,IAAD,CAAQM,KAAK,SAASC,MAAM,WAA5B,4B,GA7KdC,a,QCAhB1C,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAE/BG,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAE1D,SAASuC,EAAT,GAA+B,IAAT7D,EAAQ,EAARA,KAClB,GAAa,OAATA,EACA,OACI,yBAAKH,UAAU,mBACX,kBAAC,gBAAD,CACIiE,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,MAAM,OAAOC,KAAG,EAAC7D,IAAKP,EAAUE,EAAKM,MAAOC,IAAKP,EAAKQ,OAC/D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYR,EAAKQ,MACjB,kBAAC,IAAD,KAAWR,EAAKmE,iBAS5C,SAASC,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7C,OAAiB,OAAbF,EAEI,yBAAKxE,UAAU,uBACX,wCACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAASiE,IAAE,GACNO,EAASxD,KAAI,SAAC2D,GACX,OACI,kBAAC,OAAD,CAAMV,IAAE,GACJ,wBAAIhD,IAAK0D,EAAQrE,IACb,2BAAIqE,EAAQA,SACZ,gCAAMA,EAAQC,OAAd,KAAwB,IAAIC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAaC,OAAO,IAAIC,KAAKA,KAAKC,MAAMT,EAAQU,gBAOzK,kBAAC,EAAD,CAAaX,OAAQA,EAAQD,YAAaA,KAK9C,8B,IAKNa,E,kDACF,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IACD0E,MAAQ,CACTC,aAAa,GAEjB,EAAKC,YAAc,EAAKA,YAAYvD,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,0DAUfM,KAAKkD,SAAS,CACVF,aAAchD,KAAK+C,MAAMC,gB,mCAIpBrD,GACTK,KAAKiD,cACLjD,KAAK3B,MAAM4D,YAAYjC,KAAK3B,MAAM6D,OAAQvC,EAAOwD,OAAQxD,EAAOyC,OAAQzC,EAAOwC,W,+BAGzE,IA3EKlD,EA2EN,OACL,OACI,yBAAKzB,UAAU,aACX,kBAAC,IAAD,CAAQ4F,SAAO,EAACxF,QAASoC,KAAKiD,aAC1B,0BAAMzF,UAAU,iBADpB,mBAGA,kBAAC,IAAD,CAAO6F,OAAQrD,KAAK+C,MAAMC,YAAaM,OAAQtD,KAAKiD,aAChD,kBAAC,IAAD,CAAaK,OAAQtD,KAAKiD,aAA1B,iBACA,kBAAC,IAAD,KACI,kBAAC,YAAD,CAAW3C,SAAU,SAACX,GAAD,OAAY,EAAKF,aAAaE,KAC/C,kBAAC,IAAD,CAAKnC,UAAU,cACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+C,QAAQ,UAAf,UACA,kBAAC,UAAQW,OAAT,CAAgBb,MAAM,UAAUlC,KAAK,SAASX,UAAU,gBACpD,qCACA,qCACA,qCACA,qCACA,wCAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+C,QAAQ,UAAf,UACA,kBAAC,UAAQE,KAAT,CAAcJ,MAAM,UAAUvC,GAAG,SAASK,KAAK,SAC3CuC,YAAY,SAASlD,UAAU,eAC/BmD,WACI,CAAE9B,WAAUG,WAvGrCC,EAuG0D,GAvGlD,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAuGqBC,UAAWA,EAAU,MAEnE,kBAAC,SAAD,CAAQ1B,UAAU,cACd6C,MAAM,UACNO,KAAK,UACLC,SAAU,CACNhC,SAAU,WACVK,UAAW,qCACXF,UAAW,qCAI3B,kBAAC,IAAD,CAAKxB,UAAU,cACX,kBAAC,IAAD,CAAKgD,GAAI,IACL,kBAAC,IAAD,CAAOD,QAAQ,WAAf,WACA,kBAAC,UAAQY,SAAT,CAAkBd,MAAM,WAAWvC,GAAG,UAAUK,KAAK,UACjDiD,KAAK,IACL5D,UAAU,mBAGtB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAKgD,GAAI,CAAEM,KAAM,KACb,kBAAC,IAAD,CAAQO,KAAK,SAASC,MAAM,WAA5B,qB,GAvEVC,aAqIXgC,EAjDI,SAAClF,GAChB,OAAIA,EAAMK,UAEF,yBAAKlB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPa,EAAMM,QAEP,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKa,EAAMM,WAKJ,MAAdN,EAAMV,KAEP,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAMK,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBe,QAAM,GAAEP,EAAMV,KAAKQ,OAEvC,yBAAKX,UAAU,UACX,4BAAKa,EAAMV,KAAKQ,MAChB,+BAGR,yBAAKX,UAAU,OACX,kBAACgE,EAAD,CAAY7D,KAAMU,EAAMV,OACxB,kBAACoE,EAAD,CAAgBC,SAAU3D,EAAM2D,SAC5BC,YAAa5D,EAAM4D,YACnBC,OAAQ7D,EAAMV,KAAKG,OAM/B,yBAAKN,UAAU,SC3L3B,SAASgG,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAM/E,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACrC,OAAID,EAEA,kBAAC,EAAD,MAEOC,EAEP,4BAAKA,GAIL,kBAAC,gBAAD,CAAe8C,IAAE,EACfC,eAAgB,CACdC,cAAe,gCAEjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3D,IAAKP,EAAUgG,EAAKxF,MAAOC,IAAKuF,EAAKtF,OAC9C,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYsF,EAAKtF,MAChBsF,EAAKC,YAAc,kBAAC,IAAD,KAAeD,EAAKC,aAA8B,KACtE,kBAAC,IAAD,KAAWD,EAAK3B,gBAyBb6B,MAjBf,SAActF,GACZ,OACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAACgG,EAAD,CAAYC,KAAMpF,EAAMV,KAAMe,UAAWL,EAAMuF,cAAejF,QAASN,EAAMwF,iBAE/E,yBAAKrG,UAAU,qBACb,kBAACgG,EAAD,CAAYC,KAAMpF,EAAMyF,UAAWpF,UAAWL,EAAM0F,aAAcpF,QAASN,EAAM2F,eADnF,cAEA,yBAAKxG,UAAU,qBACb,kBAACgG,EAAD,CAAYC,KAAMpF,EAAM4F,OAAQvF,UAAWL,EAAM6F,cAAevF,QAASN,EAAM8F,oBCkE1EC,E,kDAxGX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IAED0E,MAAQ,CACXsB,WAAW,EACXrB,aAAa,GAGf,EAAKsB,UAAY,EAAKA,UAAU5E,KAAf,gBACjB,EAAKuD,YAAc,EAAKA,YAAYvD,KAAjB,gBACnB,EAAK6E,YAAc,EAAKA,YAAY7E,KAAjB,gBAVJ,E,wDAcfM,KAAKkD,SAAS,CACZmB,WAAYrE,KAAK+C,MAAMsB,c,oCAKzBrE,KAAKkD,SAAS,CACVF,aAAchD,KAAK+C,MAAMC,gB,kCAInBwB,GACVxE,KAAKiD,cACLwB,MAAM,aAAezE,KAAK0E,SAASC,MAAQ,aAAe3E,KAAK4E,SAASD,MACtE,cAAgB3E,KAAK6E,SAASC,SAChCN,EAAMO,mB,+BAGA,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKzH,UAAU,aACX,kBAAC,IAAD,CAAeI,QAASoC,KAAKsE,YAC7B,kBAAC,IAAD,CAAa9G,UAAU,UAAU2C,KAAK,KAAI,yBAAKnC,IAAI,yBAAyBkH,OAAO,KAAKnH,MAAM,KAAKG,IAAI,2BACvG,kBAAC,IAAD,CAAUmF,OAAQrD,KAAK+C,MAAMsB,UAAWc,QAAM,GAC1C,kBAAC,IAAD,CAAKA,QAAM,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS3H,UAAU,WAAYK,GAAG,SAAQ,0BAAML,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAWK,GAAG,YAAW,0BAAML,UAAU,qBAA5D,cAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAYK,GAAG,SAAQ,0BAAML,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAWK,GAAG,cAAa,0BAAML,UAAU,6BAA9D,iBAGJ,kBAAC,IAAD,CAAKA,UAAU,UAAU2H,QAAM,GAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ/B,SAAO,EAACxF,QAASoC,KAAKiD,aAC1B,0BAAMzF,UAAU,wBADpB,eAQpB,kBAAC,IAAD,KACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAAC,IAAD,CAAO6F,OAAQrD,KAAK+C,MAAMC,YAAaM,OAAQtD,KAAKiD,aAChD,kBAAC,IAAD,CAAaK,OAAQtD,KAAKiD,aAA1B,SACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM3C,SAAUN,KAAKuE,aACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOhE,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,OAAOvD,GAAG,WAAWK,KAAK,WACtCiH,SAAU,SAACC,GAAD,OAAW,EAAKX,SAAWW,MAEzC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9E,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,WAAWvD,GAAG,WAAWK,KAAK,WAC1CiH,SAAU,SAACC,GAAD,OAAW,EAAKT,SAAWS,MAEzC,kBAAC,IAAD,CAAWrE,OAAK,GACZ,kBAAC,IAAD,CAAOA,OAAK,GACR,kBAAC,IAAD,CAAQK,KAAK,WAAWlD,KAAK,WAC7BiH,SAAU,SAACC,GAAD,OAAW,EAAKR,SAAWQ,KAFzC,gBAMJ,kBAAC,IAAD,CAAQhE,KAAK,SAASsD,MAAM,SAASnH,UAAU,cAA/C,kB,GAhGP+D,aC6CN+D,MA/Cf,SAAgBjH,GACZ,OACA,yBAAKb,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMK,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAKL,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAG2C,KAAK,6BAAR,wBAI1C,yBAAK3C,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiC2C,KAAK,uBAAsB,uBAAG3C,UAAU,uBACtF,uBAAGA,UAAU,mCAAmC2C,KAAK,2CAA0C,uBAAG3C,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmC2C,KAAK,+BAA8B,uBAAG3C,UAAU,oBAChG,uBAAGA,UAAU,kCAAkC2C,KAAK,uBAAsB,uBAAG3C,UAAU,mBACvF,uBAAGA,UAAU,iCAAiC2C,KAAK,uBAAsB,uBAAG3C,UAAU,mBACtF,uBAAGA,UAAU,sBAAsB2C,KAAK,WAAU,uBAAG3C,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6ECsEL+H,MAzGf,SAAelH,GAEX,SAASmH,EAAT,GAAyD,IAAhCC,EAA+B,EAA/BA,QAAS/G,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACzC,OAAID,EACO,kBAAC,EAAD,MACAC,EAEH,4BAAKA,GAIL,kBAAC,IAAD,CAAO+G,MAAI,GACP,kBAAC,UAAD,CAASjE,IAAE,GACNgE,EAAQjH,KAAI,SAACyF,GAAD,OAAY,kBAAC,OAAD,CAAMxC,IAAE,GAAC,kBAACkE,EAAD,CAAclH,IAAKwF,EAAOnG,GAAImG,OAAQA,UAO5F,SAAS0B,EAAT,GAAmC,IAAX1B,EAAU,EAAVA,OACpB,OACI,yBAAKzG,UAAU,eACX,kBAAC,IAAD,CAAOoI,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GACd,kBAAC,IAAD,CAAOC,QAAM,EAAC/H,IAAKP,EAAUwG,EAAOhG,MAAOC,IAAK+F,EAAO9F,QAE3D,kBAAC,IAAD,CAAO6H,MAAI,EAACxI,UAAU,UAClB,kBAAC,IAAD,CAAOyI,SAAO,GAAEhC,EAAO9F,MACvB,2BAAI8F,EAAOP,aACX,2BAAIO,EAAOnC,iBAO/B,IAAM2D,EAAU,kBAACD,EAAD,CAAeC,QAASpH,EAAMoH,QAAQA,QAClD/G,UAAWL,EAAMoH,QAAQ/G,UACzBC,QAASN,EAAMoH,QAAQ9G,UAE3B,OACI,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAMK,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBe,QAAM,GAAtB,aAEJ,yBAAKpB,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAM0I,MAAM,gBAAZ,0EAQpB,yBAAK1I,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAOkI,MAAI,GACND,Q,eCnCZ7B,EAAgB,iBAAO,CAChCvC,KCpE0B,mBDuEjB8E,EAAe,SAACC,GAAD,MAAc,CACtC/E,KCvEyB,gBDwEzBgF,QAASD,IAGAE,EAAY,SAAC/H,GAAD,MAAa,CAClC8C,KC3EsB,aD4EtBgF,QAAS9H,IAuBAgI,EAAiB,SAACH,GAAD,MAAc,CACxC/E,KCjG2B,kBDkG3BgF,QAASD,IAGAI,EAAc,SAACxE,GAAD,MAAe,CACtCX,KCvGwB,eDwGxBgF,QAASrE,IA0BAyE,EAAgB,iBAAO,CAChCpF,KChI0B,mBDmIjBqF,EAAe,SAACN,GAAD,MAAc,CACtC/E,KClIyB,gBDmIzBgF,QAASD,IAGAO,EAAY,SAACC,GAAD,MAAa,CAClCvF,KCxIsB,aDyItBgF,QAASO,IA2BAC,EAAiB,iBAAO,CACjCxF,KChK2B,oBDmKlByF,EAAgB,SAACV,GAAD,MAAc,CACvC/E,KCrK0B,iBDsK1BgF,QAASD,IAGAW,EAAa,SAACtB,GAAD,MAAc,CACpCpE,KC3KuB,cD4KvBgF,QAASZ,I,QEtJPuB,E,kLAGFhH,KAAK3B,MAAM4I,cACXjH,KAAK3B,MAAM6I,gBACXlH,KAAK3B,MAAM8I,cACXnH,KAAK3B,MAAM+I,iB,+BAGH,IAAD,OA+BP,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,kBAAD,KACE,kBAAC,gBAAD,CAAe3I,IAAKuB,KAAK3B,MAAMgJ,SAAS5I,IAAK6I,WAAW,OAAOC,QAAS,KACtE,kBAAC,IAAD,CAAQF,SAAUrH,KAAK3B,MAAMgJ,UAC3B,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UAnCb,WACf,OACE,kBAAC,EAAD,CACE9J,KAAM,EAAKU,MAAME,OAAOA,OAAOmJ,QAAO,SAAC/J,GAAD,OAAUA,EAAKgK,YAAU,GAC/D/D,cAAe,EAAKvF,MAAME,OAAOG,UACjCkJ,YAAa,EAAKvJ,MAAME,OAAOI,QAC/BmF,UAAW,EAAKzF,MAAMwJ,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9E5D,aAAc,EAAK1F,MAAMwJ,WAAWnJ,UACpCsF,aAAc,EAAK3F,MAAMwJ,WAAWlJ,QACpCsF,OAAQ,EAAK5F,MAAMoH,QAAQA,QAAQiC,QAAO,SAACzD,GAAD,OAAYA,EAAO0D,YAAU,GACvEzD,cAAe,EAAK7F,MAAMoH,QAAQ/G,UAClCyF,cAAe,EAAK9F,MAAMoH,QAAQ9G,aAyB9B,kBAAC,IAAD,CAAOoJ,OAAK,EAACP,KAAK,WAAWC,UAAW,kBAAM,kBAAC,EAAD,CAAOhC,QAAS,EAAKpH,MAAMoH,aACzE,kBAAC,IAAD,CAAOsC,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAMlJ,OAAQ,EAAKF,MAAME,YACpE,kBAAC,IAAD,CAAOiJ,KAAK,gBAAgBC,UAtBnB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MACpB,OACE,kBAAC,EAAD,CAAYrK,KAAM,EAAKU,MAAME,OAAOA,OAAOmJ,QAAO,SAAC/J,GAAD,OAAUA,EAAKG,KAAOmK,SAASD,EAAME,OAAOhG,OAAQ,OAAK,GACzGxD,UAAW,EAAKL,MAAME,OAAOG,UAC7BC,QAAS,EAAKN,MAAME,OAAOI,QAC3BqD,SAAU,EAAK3D,MAAM2D,SAASA,SAAS0F,QAAO,SAACvF,GAAD,OAAaA,EAAQD,SAAW+F,SAASD,EAAME,OAAOhG,OAAQ,OAC5GiG,gBAAiB,EAAK9J,MAAM2D,SAASrD,QACrCsD,YAAa,EAAK5D,MAAM4D,kBAgBpB,kBAAC,IAAD,CAAO8F,OAAK,EAACP,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAASxH,aAAe,EAAK5B,MAAM4B,aAAcC,kBAAmB,EAAK7B,MAAM6B,uBAC/H,kBAAC,IAAD,CAAUrC,GAAG,aAInB,kBAAC,EAAD,W,GAvDW0D,aA6DJ6G,cAAWC,mBAlFF,SAAAtF,GACtB,MAAO,CACLxE,OAAQwE,EAAMxE,OACdyD,SAAUe,EAAMf,SAChB6F,WAAY9E,EAAM8E,WAClBpC,QAAS1C,EAAM0C,YAKQ,SAAA6C,GAAQ,MAAK,CACtCrG,YAAa,SAACC,EAAQiB,EAAQf,EAAQD,GAAzB,OAAqCmG,EFjBzB,SAACpG,EAAQiB,EAAQf,EAAQD,GAAzB,OAAqC,SAACmG,GAE7D,IAAMC,EAAa,CACfrG,OAAQA,EACRiB,OAAQA,EACRf,OAAQA,EACRD,QAASA,GAIb,OAFAoG,EAAW1F,MAAO,IAAIF,MAAO6F,cAEtBC,MAAMhL,EAAU,WAAY,CAC3BiL,OAAQ,OACR1C,KAAMlG,KAAKC,UAAUwI,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEhBC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIR,EArCA,SAACnG,GAAD,MAAc,CACpCd,KCJuB,cDKvBgF,QAASlE,GAmCsBmH,CAAWR,OACrCS,OAAM,SAAAP,GACHpJ,QAAQC,IAAI,gBAAiBmJ,EAAMI,SACnC3E,MAAM,2CAA6CuE,EAAMI,aElBRnH,CAAYC,EAAQiB,EAAQf,EAAQD,KAC/F8E,YAAa,WAAQqB,GFqBU,SAACA,GAG9B,OAFAA,EAAS1E,GAAc,IAEhB6E,MAAMhL,EAAU,UAClBoL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAtK,GAAM,OAAI+J,EAAShC,EAAU/H,OAClCgL,OAAM,SAAAP,GAAK,OAAIV,EAASnC,EAAa6C,EAAMI,iBEvClDlJ,kBAAmB,WAAQoI,EAASkB,UAAQC,MAAM,cAClDvC,cAAe,kBAAMoB,GFuDY,SAACA,GAChC,OAAOG,MAAMhL,EAAU,YAClBoL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAA7G,GAAQ,OAAIsG,EAAS9B,EAAYxE,OACtCuH,OAAM,SAAAP,GAAK,OAAIV,EAAS/B,EAAeyC,EAAMI,iBEvEpDjC,YAAa,kBAAMmB,GFoFY,SAACA,GAI9B,OAFAA,EAAS7B,KAEFgC,MAAMhL,EAAU,cAClBoL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAjC,GAAM,OAAI0B,EAAS3B,EAAUC,OAClC2C,OAAM,SAAAP,GAAK,OAAIV,EAAS5B,EAAasC,EAAMI,iBEvGlDhC,aAAc,kBAAMkB,GFwHY,SAACA,GAI/B,OAFAA,EAASzB,KAEF4B,MAAMhL,EAAU,WAClBoL,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAApD,GAAO,OAAI6C,EAASvB,EAAWtB,OACpC8D,OAAM,SAAAP,GAAK,OAAIV,EAASxB,EAAckC,EAAMI,iBE3InDnJ,aAAc,SAACyJ,GAAD,OAAcpB,EF6JF,SAACoB,GAAD,OAAc,WAEtC,IAAMC,EAAW,2BAAOD,GAAP,IAAiB7G,MAAM,IAAIF,MAAO6F,gBAEnD,OAAOC,MAAMhL,EAAU,WAAY,CAC3BiL,OAAQ,OACR1C,KAAMlG,KAAKC,UAAU4J,GACrBhB,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEhBC,MAAK,SAAAC,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIrE,MAAM,gCAAkC3E,KAAKC,UAAU+I,OACxES,OAAM,SAAAP,GACHpJ,QAAQC,IAAI,gBAAiBmJ,EAAMI,SACnC3E,MAAM,6CAA+CuE,EAAMI,aE1LhCnJ,CAAayJ,QAiE1BrB,CAA6CrB,I,iBC9F1D4C,GAAS,WAIP,IAJQ7G,EAIT,uDAJiB,CAC3BrE,WAAW,EACXC,QAAS,KACTJ,OAAQ,IACTsL,EAAW,uCACV,OAAQA,EAAOxI,MACX,IFJkB,aEKd,OAAO,2BAAI0B,GAAX,IAAkBrE,WAAW,EAAOC,QAAS,KAAMJ,OAAQsL,EAAOxD,UAEtE,IFTsB,iBEUlB,OAAO,2BAAItD,GAAX,IAAkBrE,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,KAE9D,IFXqB,gBEYjB,OAAO,2BAAIwE,GAAX,IAAkBrE,WAAW,EAAOC,QAASkL,EAAOxD,QAAS9H,OAAQ,KAEzE,QACI,OAAOwE,IChBN+G,GAAa,WAIX,IAJY/G,EAIb,uDAJqB,CAC/BrE,WAAW,EACXC,QAAS,KACTkJ,WAAY,IACbgC,EAAW,uCACV,OAAQA,EAAOxI,MACX,IHEkB,aGDd,OAAO,2BAAI0B,GAAX,IAAkBrE,WAAW,EAAOC,QAAS,KAAMkJ,WAAYgC,EAAOxD,UAE1E,IHFsB,iBGGlB,OAAO,2BAAItD,GAAX,IAAkBrE,WAAW,EAAMC,QAAS,KAAMkJ,WAAY,KAElE,IHHqB,gBGIjB,OAAO,2BAAI9E,GAAX,IAAkBrE,WAAW,EAAOC,QAASkL,EAAOxD,UAExD,QACI,OAAOtD,IChBNgH,GAAW,WAAsD,IAArDhH,EAAoD,uDAA5C,CAAEpE,QAAS,KAAMqD,SAAU,IAAM6H,EAAW,uCACzE,OAAQA,EAAOxI,MACX,IJEoB,eIDhB,OAAO,2BAAI0B,GAAX,IAAkBpE,QAAS,KAAMqD,SAAU6H,EAAOxD,UAEtD,IJAuB,kBICnB,OAAO,2BAAItD,GAAX,IAAkBpE,QAASkL,EAAOxD,UAEtC,IJVmB,cIWf,IAAIlE,EAAU0H,EAAOxD,QACrB,OAAO,2BAAItD,GAAX,IAAkBf,SAAUe,EAAMf,SAASgI,OAAO7H,KAEtD,QACI,OAAOY,ICbNkH,GAAU,WAIR,IAJSlH,EAIV,uDAJkB,CAC5BrE,WAAW,EACXC,QAAS,KACT8G,QAAS,IACVoE,EAAW,uCACV,OAAQA,EAAOxI,MACX,ILKmB,cKJf,OAAO,2BAAI0B,GAAX,IAAkBrE,WAAW,EAAOC,QAAS,KAAM8G,QAASoE,EAAOxD,UAEvE,ILIuB,kBKHnB,OAAO,2BAAItD,GAAX,IAAkBrE,WAAW,EAAMC,QAAS,KAAM8G,QAAS,KAE/D,ILAsB,iBKClB,OAAO,2BAAI1C,GAAX,IAAkBrE,WAAW,EAAOC,QAASkL,EAAOxD,UAExD,QACI,OAAOtD,IClBNmH,GAAkB,CAC3BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbpB,QAAS,I,wCCAPqB,GCIYC,sBACVC,0BAAgB,aACZpM,OAAQqL,GACR5H,SAAU+H,GACVlC,WAAYiC,GACZrE,QAASwE,IACNW,sBAAY,CACXlB,SAAUQ,OAGlBW,0BAAgBC,KAAOC,ODGhBC,G,uKAZX,OACE,kBAAC,WAAD,CAAUP,MAAOA,IACjB,kBAAC,IAAD,KACE,yBAAKjN,UAAU,OACb,kBAAC,EAAD,a,GAPQ+D,aEGE0J,QACW,cAA7BC,OAAO7D,SAAS8D,UAEe,UAA7BD,OAAO7D,SAAS8D,UAEhBD,OAAO7D,SAAS8D,SAASnD,MACvB,2DCTNoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEdtC,OAAM,SAAAP,GACLpJ,QAAQoJ,MAAMA,EAAMI,a","file":"static/js/main.ffb95c33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        //onClick={() => onClick(dish.id)}>\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            //onClick={props.onClick} \r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form'; \r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        //alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                        <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}/>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}/>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}/>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"/> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport {\r\n    Card, CardBody, CardImg, CardText, CardTitle,\r\n    Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Row, Col, Label\r\n} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish !== null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5\">\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg witdh=\"100%\" top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments !== null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil\"></span> Submit comment\r\n            </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Commit</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Author</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Author\" className=\"form-control\"\r\n                                        validators={\r\n                                            { required, maxLength: maxLength(15), minLength: minLength(3) }\r\n                                        } />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greather than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"row\"></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  } else if (errMess) {\r\n    return (\r\n      <h4>{errMess}</h4>\r\n    );\r\n  } else {\r\n    return (\r\n      <FadeTransform in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />          </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home; ","import React, {Component} from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, \r\n    Modal, Button, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n          });\r\n      }\r\n\r\n      handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input  type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeaders({ leaders, isLoading, errMess }) {\r\n        if (isLoading) {\r\n            return <Loading />\r\n        } else if (errMess) {\r\n            return (\r\n                <h4>{errMess}</h4>\r\n            )\r\n        } else {\r\n            return (\r\n                <Media list>\r\n                    <Stagger in>\r\n                        {leaders.map((leader) => <Fade in><RenderLeader key={leader.id} leader={leader} /></Fade>)}\r\n                    </Stagger>\r\n                </Media>\r\n            )\r\n        }\r\n    }\r\n\r\n    function RenderLeader({ leader }) {\r\n        return (\r\n            <div className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"col-12\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const leaders = <RenderLeaders leaders={props.leaders.leaders}\r\n        isLoading={props.leaders.isLoading}\r\n        errMess={props.leaders.errMess} />\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString()\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newComment),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments', error.message);\r\n            alert('Your comment could not be posted\\nError ' + error.message);\r\n        })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + \": \" + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const postFeedback = (feedback) => () => {\r\n\r\n    const newFeedback = {...feedback, date: new Date().toISOString() };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newFeedback),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => alert('Thank you for your feedback! ' + JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post feedback', error.message)\r\n            alert('Your feedback could not be posted\\nError: ' + error.message)\r\n        })\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponents';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact postFeedback= {this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component }from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render(){\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Promotions } from './promotions';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}